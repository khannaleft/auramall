"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./services/cloudinaryService.ts":
/*!***************************************!*\
  !*** ./services/cloudinaryService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uploadToCloudinary: function() { return /* binding */ uploadToCloudinary; }\n/* harmony export */ });\n// services/cloudinaryService.ts\nconst uploadToCloudinary = async (file)=>{\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    // Use the named unsigned upload preset.\n    formData.append(\"upload_preset\", \"aurakhannaleft\");\n    const cloudName = \"dfbz4neaf\";\n    const url = \"https://api.cloudinary.com/v1_1/\".concat(cloudName, \"/image/upload\");\n    try {\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error.message || \"Cloudinary upload failed\");\n        }\n        const data = await response.json();\n        return data.secure_url;\n    } catch (error) {\n        console.error(\"Error uploading to Cloudinary:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NlcnZpY2VzL2Nsb3VkaW5hcnlTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxnQ0FBZ0M7QUFPekIsTUFBTUEscUJBQXFCLE9BQU9DO0lBQ3JDLE1BQU1DLFdBQVcsSUFBSUM7SUFDckJELFNBQVNFLE1BQU0sQ0FBQyxRQUFRSDtJQUN4Qix3Q0FBd0M7SUFDeENDLFNBQVNFLE1BQU0sQ0FBQyxpQkFBaUI7SUFFakMsTUFBTUMsWUFBWTtJQUNsQixNQUFNQyxNQUFNLG1DQUE2QyxPQUFWRCxXQUFVO0lBRXpELElBQUk7UUFDQSxNQUFNRSxXQUFXLE1BQU1DLE1BQU1GLEtBQUs7WUFDOUJHLFFBQVE7WUFDUkMsTUFBTVI7UUFDVjtRQUVBLElBQUksQ0FBQ0ssU0FBU0ksRUFBRSxFQUFFO1lBQ2QsTUFBTUMsWUFBWSxNQUFNTCxTQUFTTSxJQUFJO1lBQ3JDLE1BQU0sSUFBSUMsTUFBTUYsVUFBVUcsS0FBSyxDQUFDQyxPQUFPLElBQUk7UUFDL0M7UUFFQSxNQUFNQyxPQUEyQixNQUFNVixTQUFTTSxJQUFJO1FBQ3BELE9BQU9JLEtBQUtDLFVBQVU7SUFDMUIsRUFBRSxPQUFPSCxPQUFPO1FBQ1pJLFFBQVFKLEtBQUssQ0FBQyxrQ0FBa0NBO1FBQ2hELE1BQU1BO0lBQ1Y7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NlcnZpY2VzL2Nsb3VkaW5hcnlTZXJ2aWNlLnRzP2JjODkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc2VydmljZXMvY2xvdWRpbmFyeVNlcnZpY2UudHNcblxuaW50ZXJmYWNlIENsb3VkaW5hcnlSZXNwb25zZSB7XG4gICAgc2VjdXJlX3VybDogc3RyaW5nO1xuICAgIC8vIG90aGVyIHByb3BlcnRpZXMgYXJlIGF2YWlsYWJsZSwgYnV0IHdlIG9ubHkgbmVlZCBzZWN1cmVfdXJsXG59XG5cbmV4cG9ydCBjb25zdCB1cGxvYWRUb0Nsb3VkaW5hcnkgPSBhc3luYyAoZmlsZTogRmlsZSk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcbiAgICAvLyBVc2UgdGhlIG5hbWVkIHVuc2lnbmVkIHVwbG9hZCBwcmVzZXQuXG4gICAgZm9ybURhdGEuYXBwZW5kKCd1cGxvYWRfcHJlc2V0JywgJ2F1cmFraGFubmFsZWZ0Jyk7XG5cbiAgICBjb25zdCBjbG91ZE5hbWUgPSAnZGZiejRuZWFmJztcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkuY2xvdWRpbmFyeS5jb20vdjFfMS8ke2Nsb3VkTmFtZX0vaW1hZ2UvdXBsb2FkYDtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIGJvZHk6IGZvcm1EYXRhLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JEYXRhLmVycm9yLm1lc3NhZ2UgfHwgJ0Nsb3VkaW5hcnkgdXBsb2FkIGZhaWxlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGF0YTogQ2xvdWRpbmFyeVJlc3BvbnNlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4gZGF0YS5zZWN1cmVfdXJsO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwbG9hZGluZyB0byBDbG91ZGluYXJ5OicsIGVycm9yKTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJ1cGxvYWRUb0Nsb3VkaW5hcnkiLCJmaWxlIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImNsb3VkTmFtZSIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJib2R5Iiwib2siLCJlcnJvckRhdGEiLCJqc29uIiwiRXJyb3IiLCJlcnJvciIsIm1lc3NhZ2UiLCJkYXRhIiwic2VjdXJlX3VybCIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/cloudinaryService.ts\n"));

/***/ })

});